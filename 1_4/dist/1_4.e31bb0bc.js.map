{"version":3,"sources":["node_modules/is-any-array/src/index.js","node_modules/ml-regression-base/src/maybeToPrecision.js","node_modules/ml-regression-base/src/checkArrayLength.js","node_modules/ml-regression-base/src/index.js","node_modules/ml-array-max/lib-es6/index.js","node_modules/ml-array-min/lib-es6/index.js","node_modules/ml-array-rescale/lib-es6/index.js","node_modules/ml-matrix/src/inspect.js","node_modules/ml-matrix/src/mathOperations.js","node_modules/ml-matrix/src/util.js","node_modules/ml-matrix/src/stat.js","node_modules/ml-matrix/src/matrix.js","node_modules/ml-matrix/src/views/base.js","node_modules/ml-matrix/src/views/column.js","node_modules/ml-matrix/src/views/columnSelection.js","node_modules/ml-matrix/src/views/flipColumn.js","node_modules/ml-matrix/src/views/flipRow.js","node_modules/ml-matrix/src/views/row.js","node_modules/ml-matrix/src/views/rowSelection.js","node_modules/ml-matrix/src/views/selection.js","node_modules/ml-matrix/src/views/sub.js","node_modules/ml-matrix/src/views/transpose.js","node_modules/ml-matrix/src/views/index.js","node_modules/ml-matrix/src/wrap/WrapperMatrix1D.js","node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","node_modules/ml-matrix/src/wrap/wrap.js","node_modules/ml-matrix/src/dc/lu.js","node_modules/ml-matrix/src/dc/util.js","node_modules/ml-matrix/src/dc/qr.js","node_modules/ml-matrix/src/dc/svd.js","node_modules/ml-matrix/src/decompositions.js","node_modules/ml-matrix/src/determinant.js","node_modules/ml-matrix/src/linearDependencies.js","node_modules/ml-matrix/src/pseudoInverse.js","node_modules/ml-matrix/src/covariance.js","node_modules/ml-matrix/src/correlation.js","node_modules/ml-matrix/src/dc/evd.js","node_modules/ml-matrix/src/dc/cholesky.js","node_modules/ml-matrix/src/dc/nipals.js","node_modules/ml-matrix/src/index.js","node_modules/ml-regression-polynomial/src/index.js","node_modules/ml-regression/src/regression/potential-regression.js","node_modules/ml-regression-simple-linear/src/index.js","node_modules/ml-regression-exponential/src/index.js","node_modules/ml-regression-power/src/index.js","node_modules/ml-regression-multivariate-linear/src/index.js","node_modules/ml-distance-euclidean/lib-es6/euclidean.js","node_modules/ml-kernel-gaussian/gaussian-kernel.js","node_modules/ml-kernel-polynomial/polynomial-kernel.js","node_modules/ml-kernel-sigmoid/sigmoid-kernel.js","node_modules/ml-kernel/src/kernels/anova-kernel.js","node_modules/ml-kernel/src/kernels/cauchy-kernel.js","node_modules/ml-kernel/src/kernels/exponential-kernel.js","node_modules/ml-kernel/src/kernels/histogram-intersection-kernel.js","node_modules/ml-kernel/src/kernels/laplacian-kernel.js","node_modules/ml-kernel/src/kernels/multiquadratic-kernel.js","node_modules/ml-kernel/src/kernels/rational-quadratic-kernel.js","node_modules/ml-kernel/src/kernel.js","node_modules/ml-regression/src/regression/kernel-ridge-regression.js","node_modules/ml-regression/src/regression/poly-fit-regression2d.js","node_modules/median-quickselect/lib/median-quickselect.min.js","node_modules/ml-array-median/lib-es6/index.js","node_modules/ml-regression-theil-sen/src/index.js","node_modules/ml-regression-robust-polynomial/src/index.js","node_modules/ml-regression/src/index.js","index.js","../../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","maybeToPrecision","value","digits","toPrecision","checkArraySize","x","y","TypeError","length","RangeError","BaseRegression","constructor","new","target","Error","predict","_predict","i","push","train","toLaTeX","score","n","y2","Array","xSum","ySum","chi2","rmsd","xSquared","ySquared","xY","r","Math","sqrt","r2","max","input","options","arguments","undefined","_options$fromIndex","fromIndex","_options$toIndex","toIndex","Number","isInteger","maxValue","min","minValue","rescale","output","currentMin","currentMax","_options$min","autoMinMax","_options$max","factor","indent","repeat","indentData","inspectMatrix","inspectMatrixWithOptions","matrix","maxRows","maxColumns","maxNumSize","name","inspectData","rows","columns","maxI","maxJ","result","line","j","formatNumber","get","join","num","numStr","String","padEnd","precise","exponential","toExponential","eIndex","indexOf","e","slice","installMathOperations","AbstractMatrix","Matrix","add","addS","addM","set","checkMatrix","newMatrix","sub","subS","subM","subtract","subtractS","subtractM","mul","mulS","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","abs","acos","acosh","asin","asinh","atan","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","log","log1p","log10","log2","round","sign","sin","sinh","tan","tanh","trunc","pow","arg0","powS","powM","checkRowIndex","index","outer","checkColumnIndex","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","isArray","from","columnOut","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","array","checkNonEmpty","isEmpty","sumByRow","sum","sumByColumn","sumAll","v","productByRow","productByColumn","productAll","varianceByRow","unbiased","mean","cols","variance","sum1","sum2","varianceByColumn","varianceAll","size","centerByRow","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","interval","eye","diag","data","l","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","maxRow","p","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","NaN","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","norm","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","c2","console","warn","embed","mat","resultat","blockMult","a","b","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","kroneckerSum","AxI","IxB","transpose","sortRows","compareFunction","compareNumbers","sort","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","standardDeviation","center","Symbol","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixColumnView","MatrixColumnSelectionView","MatrixFlipColumnView","MatrixFlipRowView","MatrixRowView","MatrixRowSelectionView","MatrixSelectionView","MatrixSubView","MatrixTransposeView","WrapperMatrix1D","_calculateIndex","WrapperMatrix2D","wrap","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","LU","isSingular","col","solve","count","X","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","iter","eps","EPSILON","kase","alpha","MIN_VALUE","isNaN","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","d","subMatrix0","subMatrix1","subMatrix2","xrange","exception","range","dependenciesOneRow","error","thresholdValue","thresholdError","returnArray","linearDependencies","results","Abis","svd","pseudoInverse","svdSolution","SVD","covariance","xMatrix","yMatrix","yIsSame","cov","correlation","sdx","sdy","corr","EigenvalueDecomposition","assumeSymmetric","tred2","tql2","H","ort","orthes","hqr2","realEigenvalues","imaginaryEigenvalues","eigenvectorMatrix","hh","dl1","c3","el1","s2","tst1","low","high","nn","exshift","z","w","ra","sa","vr","vi","notlast","cdivres","cdiv","xr","xi","yr","yi","CholeskyDecomposition","dimension","positiveDefinite","L","isPositiveDefinite","B","nipals","scaleScores","maxIterations","terminationCriteria","u","diff","tOld","counter","xResidual","residual","yResidual","betas","PolynomialRegression","degree","powers","coefficients","regress","precision","_toFormula","isLaTeX","sup","closeSup","times","fn","str","charAt","load","json","pr","F","FT","A","PotentialRegression","M","linear","SimpleLinearRegression","slope","intercept","computeX","xFactor","absIntercept","operator","slr","numerator","ExponentialRegression","er","yl","PowerRegression","newInputs","latex","replace","xl","MultivariateLinearRegression","statistics","weights","inputs","outputs","xt","xx","xy","invxx","beta","fittedValues","residuals","map","ri","reduce","stdError","stdErrorMatrix","stdErrors","tStats","summary","regressionStatistics","standardError","observations","variables","label","tStat","model","squaredEuclidean","euclidean","defaultOptions","lambda","kernelType","kernelOptions","computeCoefficient","KernelRidgeRegression","kernel","Kernel","assign","kernelFunction","K","compute","order","PolynomialFitRegression2D","examples","x1","x2","scaleX1","scaleX2","scaleY","limit","powColVector","qqs","qqs1","power","median","TheilSenRegression","theilSen","regression","len","slopes","medianSlope","cuts","RobustPolynomialRegression","robustPolynomial","_","tuples","getRandomTuples","tuple","calcCoefficients","residualsMedian","pos","half","NLR","SLR","require","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","concat","Function","deps","cached","cache","cb"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC/FA;;AACA;;AACA;;;;AAEA,MAAM8R,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,GADa;AAErBC,EAAAA,UAAU,EAAE,UAFS;AAGrBC,EAAAA,aAAa,EAAE,EAHM;AAIrBC,EAAAA,kBAAkB,EAAE;AAJC,CAAvB,EAOA;AACA;;AACe,MAAMC,qBAAN,SAAoC/qB,yBAApC,CAAmD;AAChEC,EAAAA,WAAW,CAAC+oB,MAAD,EAASC,OAAT,EAAkBrnB,OAAlB,EAA2B;AACpC;;AACA,QAAIonB,MAAM,KAAK,IAAf,EAAqB;AACnB;AACA,WAAKhK,KAAL,GAAaiK,OAAO,CAACjK,KAArB;AACA,WAAKgK,MAAL,GAAcC,OAAO,CAACD,MAAtB;AACA,WAAK4B,UAAL,GAAkB3B,OAAO,CAAC2B,UAA1B;AACA,WAAKC,aAAL,GAAqB5B,OAAO,CAAC4B,aAA7B;AACA,WAAKG,MAAL,GAAc,IAAIC,iBAAJ,CAAWhC,OAAO,CAAC2B,UAAnB,EAA+B3B,OAAO,CAAC4B,aAAvC,CAAd;AACD,KAPD,MAOO;AACL7B,MAAAA,MAAM,GAAG9jB,iBAAOK,WAAP,CAAmByjB,MAAnB,CAAT;AACApnB,MAAAA,OAAO,GAAG5C,MAAM,CAACksB,MAAP,CAAc,EAAd,EAAkBR,cAAlB,EAAkC9oB,OAAlC,CAAV;AAEA,YAAMupB,cAAc,GAAG,IAAIF,iBAAJ,CACrBrp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","file":"1_4.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const toString = Object.prototype.toString;\r\n\r\nexport default function isAnyArray(object) {\r\n  return toString.call(object).endsWith('Array]');\r\n}\r\n","export default function maybeToPrecision(value, digits) {\n  if (value < 0) {\n    value = 0 - value;\n    if (typeof digits === 'number') {\n      return `- ${value.toPrecision(digits)}`;\n    } else {\n      return `- ${value.toString()}`;\n    }\n  } else {\n    if (typeof digits === 'number') {\n      return value.toPrecision(digits);\n    } else {\n      return value.toString();\n    }\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport default function checkArraySize(x, y) {\n  if (!isAnyArray(x) || !isAnyArray(y)) {\n    throw new TypeError('x and y must be arrays');\n  }\n  if (x.length !== y.length) {\n    throw new RangeError('x and y arrays must have the same length');\n  }\n}\n","import isAnyArray from 'is-any-array';\n\nexport { default as maybeToPrecision } from './maybeToPrecision';\nexport { default as checkArrayLength } from './checkArrayLength';\nexport default class BaseRegression {\n  constructor() {\n    if (new.target === BaseRegression) {\n      throw new Error('BaseRegression must be subclassed');\n    }\n  }\n\n  predict(x) {\n    if (typeof x === 'number') {\n      return this._predict(x);\n    } else if (isAnyArray(x)) {\n      const y = [];\n      for (let i = 0; i < x.length; i++) {\n        y.push(this._predict(x[i]));\n      }\n      return y;\n    } else {\n      throw new TypeError('x must be a number or array');\n    }\n  }\n\n  _predict() {\n    throw new Error('_predict must be implemented');\n  }\n\n  train() {\n    // Do nothing for this package\n  }\n\n  toString() {\n    return '';\n  }\n\n  toLaTeX() {\n    return '';\n  }\n\n  /**\n   * Return the correlation coefficient of determination (r) and chi-square.\n   * @param {Array<number>} x\n   * @param {Array<number>} y\n   * @return {object}\n   */\n  score(x, y) {\n    if (!isAnyArray(x) || !isAnyArray(y) || x.length !== y.length) {\n      throw new Error('x and y must be arrays of the same length');\n    }\n\n    const n = x.length;\n    const y2 = new Array(n);\n    for (let i = 0; i < n; i++) {\n      y2[i] = this._predict(x[i]);\n    }\n\n    let xSum = 0;\n    let ySum = 0;\n    let chi2 = 0;\n    let rmsd = 0;\n    let xSquared = 0;\n    let ySquared = 0;\n    let xY = 0;\n    for (let i = 0; i < n; i++) {\n      xSum += y2[i];\n      ySum += y[i];\n      xSquared += y2[i] * y2[i];\n      ySquared += y[i] * y[i];\n      xY += y2[i] * y[i];\n      if (y[i] !== 0) {\n        chi2 += ((y[i] - y2[i]) * (y[i] - y2[i])) / y[i];\n      }\n      rmsd += (y[i] - y2[i]) * (y[i] - y2[i]);\n    }\n\n    const r =\n      (n * xY - xSum * ySum) /\n      Math.sqrt((n * xSquared - xSum * xSum) * (n * ySquared - ySum * ySum));\n\n    return {\n      r: r,\n      r2: r * r,\n      chi2: chi2,\n      rmsd: Math.sqrt(rmsd / n),\n    };\n  }\n}\n","import isArray from 'is-any-array';\n\nfunction max(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var maxValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\nfunction min(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var _options$fromIndex = options.fromIndex,\n      fromIndex = _options$fromIndex === void 0 ? 0 : _options$fromIndex,\n      _options$toIndex = options.toIndex,\n      toIndex = _options$toIndex === void 0 ? input.length : _options$toIndex;\n\n  if (fromIndex < 0 || fromIndex >= input.length || !Number.isInteger(fromIndex)) {\n    throw new Error('fromIndex must be a positive integer smaller than length');\n  }\n\n  if (toIndex <= fromIndex || toIndex > input.length || !Number.isInteger(toIndex)) {\n    throw new Error('toIndex must be an integer greater than fromIndex and at most equal to length');\n  }\n\n  var minValue = input[fromIndex];\n\n  for (var i = fromIndex + 1; i < toIndex; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","const indent = ' '.repeat(2);\nconst indentData = ' '.repeat(4);\n\nexport function inspectMatrix() {\n  return inspectMatrixWithOptions(this);\n}\n\nexport function inspectMatrixWithOptions(matrix, options = {}) {\n  const { maxRows = 15, maxColumns = 10, maxNumSize = 8 } = options;\n  return `${matrix.constructor.name} {\n${indent}[\n${indentData}${inspectData(matrix, maxRows, maxColumns, maxNumSize)}\n${indent}]\n${indent}rows: ${matrix.rows}\n${indent}columns: ${matrix.columns}\n}`;\n}\n\nfunction inspectData(matrix, maxRows, maxColumns, maxNumSize) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j), maxNumSize));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indentData}`);\n}\n\nfunction formatNumber(num, maxNumSize) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.slice(eIndex);\n  return exponential.slice(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n\nexport function checkNonEmpty(matrix) {\n  if (matrix.isEmpty()) {\n    throw new Error('Empty matrix has no elements to index');\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","import rescale from 'ml-array-rescale';\n\nimport { inspectMatrix, inspectMatrixWithOptions } from './inspect';\nimport { installMathOperations } from './mathOperations';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n  checkNonEmpty,\n} from './util';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isEmpty() {\n    return this.rows === 0 || this.columns === 0;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    checkNonEmpty(this);\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    checkNonEmpty(this);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    if (this.isEmpty()) {\n      return NaN;\n    }\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    checkNonEmpty(this);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      if (row.length > 0) {\n        rescale(row, { min, max, output: row });\n      }\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      if (column.length) {\n        rescale(column, {\n          min: min,\n          max: max,\n          output: column,\n        });\n      }\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  kroneckerSum(other) {\n    other = Matrix.checkMatrix(other);\n    if (!this.isSquare() || !other.isSquare()) {\n      throw new Error('Kronecker Sum needs two Square Matrices');\n    }\n    let m = this.rows;\n    let n = other.rows;\n    let AxI = this.kroneckerProduct(Matrix.eye(n, n));\n    let IxB = Matrix.eye(m, m).kroneckerProduct(other);\n    return AxI.add(IxB);\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (matrix.isEmpty()) {\n      return this;\n    }\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  toString(options) {\n    return inspectMatrixWithOptions(this, options);\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      // eslint-disable-next-line no-constructor-return\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows >= 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns >= 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = nRows ? arrayData[0].length : 0;\n      if (typeof nColumns !== 'number') {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import { checkColumnIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnView extends BaseView {\n  constructor(matrix, column) {\n    checkColumnIndex(matrix, column);\n    super(matrix, matrix.rows, 1);\n    this.column = column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.column, value);\n    return this;\n  }\n\n  get(rowIndex) {\n    return this.matrix.get(rowIndex, this.column);\n  }\n}\n","import { checkColumnIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixColumnSelectionView extends BaseView {\n  constructor(matrix, columnIndices) {\n    columnIndices = checkColumnIndices(matrix, columnIndices);\n    super(matrix, matrix.rows, columnIndices.length);\n    this.columnIndices = columnIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columnIndices[columnIndex], value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columnIndices[columnIndex]);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipColumnView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(rowIndex, this.columns - columnIndex - 1, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(rowIndex, this.columns - columnIndex - 1);\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixFlipRowView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.rows, matrix.columns);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rows - rowIndex - 1, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rows - rowIndex - 1, columnIndex);\n  }\n}\n","import { checkRowIndex } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowView extends BaseView {\n  constructor(matrix, row) {\n    checkRowIndex(matrix, row);\n    super(matrix, 1, matrix.columns);\n    this.row = row;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.row, columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.row, columnIndex);\n  }\n}\n","import { checkRowIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixRowSelectionView extends BaseView {\n  constructor(matrix, rowIndices) {\n    rowIndices = checkRowIndices(matrix, rowIndices);\n    super(matrix, rowIndices.length, matrix.columns);\n    this.rowIndices = rowIndices;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(this.rowIndices[rowIndex], columnIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(this.rowIndices[rowIndex], columnIndex);\n  }\n}\n","import { checkIndices } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSelectionView extends BaseView {\n  constructor(matrix, rowIndices, columnIndices) {\n    let indices = checkIndices(matrix, rowIndices, columnIndices);\n    super(matrix, indices.row.length, indices.column.length);\n    this.rowIndices = indices.row;\n    this.columnIndices = indices.column;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.rowIndices[rowIndex],\n      this.columnIndices[columnIndex],\n    );\n  }\n}\n","import { checkRange } from '../util';\n\nimport BaseView from './base';\n\nexport default class MatrixSubView extends BaseView {\n  constructor(matrix, startRow, endRow, startColumn, endColumn) {\n    checkRange(matrix, startRow, endRow, startColumn, endColumn);\n    super(matrix, endRow - startRow + 1, endColumn - startColumn + 1);\n    this.startRow = startRow;\n    this.startColumn = startColumn;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n      value,\n    );\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(\n      this.startRow + rowIndex,\n      this.startColumn + columnIndex,\n    );\n  }\n}\n","import BaseView from './base';\n\nexport default class MatrixTransposeView extends BaseView {\n  constructor(matrix) {\n    super(matrix, matrix.columns, matrix.rows);\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.matrix.set(columnIndex, rowIndex, value);\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.matrix.get(columnIndex, rowIndex);\n  }\n}\n","export { default as MatrixColumnView } from './column';\nexport { default as MatrixColumnSelectionView } from './columnSelection';\nexport { default as MatrixFlipColumnView } from './flipColumn';\nexport { default as MatrixFlipRowView } from './flipRow';\nexport { default as MatrixRowView } from './row';\nexport { default as MatrixRowSelectionView } from './rowSelection';\nexport { default as MatrixSelectionView } from './selection';\nexport { default as MatrixSubView } from './sub';\nexport { default as MatrixTransposeView } from './transpose';\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix1D extends AbstractMatrix {\n  constructor(data, options = {}) {\n    const { rows = 1 } = options;\n\n    if (data.length % rows !== 0) {\n      throw new Error('the data length is not divisible by the number of rows');\n    }\n    super();\n    this.rows = rows;\n    this.columns = data.length / rows;\n    this.data = data;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    this.data[index] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    let index = this._calculateIndex(rowIndex, columnIndex);\n    return this.data[index];\n  }\n\n  _calculateIndex(row, column) {\n    return row * this.columns + column;\n  }\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import WrapperMatrix1D from './WrapperMatrix1D';\nimport WrapperMatrix2D from './WrapperMatrix2D';\n\nexport function wrap(array, options) {\n  if (Array.isArray(array)) {\n    if (array[0] && Array.isArray(array[0])) {\n      return new WrapperMatrix2D(array);\n    } else {\n      return new WrapperMatrix1D(array, options);\n    }\n  } else {\n    throw new Error('the argument is not an array');\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    if (value.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport Matrix from './matrix';\nimport MatrixSelectionView from './views/selection';\n\nexport function determinant(matrix) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isSquare()) {\n    if (matrix.columns === 0) {\n      return 1;\n    }\n\n    let a, b, c, d;\n    if (matrix.columns === 2) {\n      // 2 x 2 matrix\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(1, 0);\n      d = matrix.get(1, 1);\n\n      return a * d - b * c;\n    } else if (matrix.columns === 3) {\n      // 3 x 3 matrix\n      let subMatrix0, subMatrix1, subMatrix2;\n      subMatrix0 = new MatrixSelectionView(matrix, [1, 2], [1, 2]);\n      subMatrix1 = new MatrixSelectionView(matrix, [1, 2], [0, 2]);\n      subMatrix2 = new MatrixSelectionView(matrix, [1, 2], [0, 1]);\n      a = matrix.get(0, 0);\n      b = matrix.get(0, 1);\n      c = matrix.get(0, 2);\n\n      return (\n        a * determinant(subMatrix0) -\n        b * determinant(subMatrix1) +\n        c * determinant(subMatrix2)\n      );\n    } else {\n      // general purpose determinant using the LU decomposition\n      return new LuDecomposition(matrix).determinant;\n    }\n  } else {\n    throw Error('determinant can only be calculated for a square matrix');\n  }\n}\n","import SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\n\nfunction xrange(n, exception) {\n  let range = [];\n  for (let i = 0; i < n; i++) {\n    if (i !== exception) {\n      range.push(i);\n    }\n  }\n  return range;\n}\n\nfunction dependenciesOneRow(\n  error,\n  matrix,\n  index,\n  thresholdValue = 10e-10,\n  thresholdError = 10e-10,\n) {\n  if (error > thresholdError) {\n    return new Array(matrix.rows + 1).fill(0);\n  } else {\n    let returnArray = matrix.addRow(index, [0]);\n    for (let i = 0; i < returnArray.rows; i++) {\n      if (Math.abs(returnArray.get(i, 0)) < thresholdValue) {\n        returnArray.set(i, 0, 0);\n      }\n    }\n    return returnArray.to1DArray();\n  }\n}\n\nexport function linearDependencies(matrix, options = {}) {\n  const { thresholdValue = 10e-10, thresholdError = 10e-10 } = options;\n  matrix = Matrix.checkMatrix(matrix);\n\n  let n = matrix.rows;\n  let results = new Matrix(n, n);\n\n  for (let i = 0; i < n; i++) {\n    let b = Matrix.columnVector(matrix.getRow(i));\n    let Abis = matrix.subMatrixRow(xrange(n, i)).transpose();\n    let svd = new SingularValueDecomposition(Abis);\n    let x = svd.solve(b);\n    let error = Matrix.sub(b, Abis.mmul(x)).abs().max();\n    results.setRow(\n      i,\n      dependenciesOneRow(error, x, i, thresholdValue, thresholdError),\n    );\n  }\n  return results;\n}\n","import SVD from './dc/svd';\nimport Matrix from './matrix';\n\nexport function pseudoInverse(matrix, threshold = Number.EPSILON) {\n  matrix = Matrix.checkMatrix(matrix);\n  if (matrix.isEmpty()) {\n    // with a zero dimension, the pseudo-inverse is the transpose, since all 0xn and nx0 matrices are singular\n    // (0xn)*(nx0)*(0xn) = 0xn\n    // (nx0)*(0xn)*(nx0) = nx0\n    return matrix.transpose();\n  }\n  let svdSolution = new SVD(matrix, { autoTranspose: true });\n\n  let U = svdSolution.leftSingularVectors;\n  let V = svdSolution.rightSingularVectors;\n  let s = svdSolution.diagonal;\n\n  for (let i = 0; i < s.length; i++) {\n    if (Math.abs(s[i]) > threshold) {\n      s[i] = 1.0 / s[i];\n    } else {\n      s[i] = 0.0;\n    }\n  }\n\n  return V.mmul(Matrix.diag(s).mmul(U.transpose()));\n}\n","import Matrix from './matrix';\n\nexport function covariance(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n  const { center = true } = options;\n  if (center) {\n    xMatrix = xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix = yMatrix.center('column');\n    }\n  }\n  const cov = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < cov.rows; i++) {\n    for (let j = 0; j < cov.columns; j++) {\n      cov.set(i, j, cov.get(i, j) * (1 / (xMatrix.rows - 1)));\n    }\n  }\n  return cov;\n}\n","import Matrix from './matrix';\n\nexport function correlation(xMatrix, yMatrix = xMatrix, options = {}) {\n  xMatrix = new Matrix(xMatrix);\n  let yIsSame = false;\n  if (\n    typeof yMatrix === 'object' &&\n    !Matrix.isMatrix(yMatrix) &&\n    !Array.isArray(yMatrix)\n  ) {\n    options = yMatrix;\n    yMatrix = xMatrix;\n    yIsSame = true;\n  } else {\n    yMatrix = new Matrix(yMatrix);\n  }\n  if (xMatrix.rows !== yMatrix.rows) {\n    throw new TypeError('Both matrices must have the same number of rows');\n  }\n\n  const { center = true, scale = true } = options;\n  if (center) {\n    xMatrix.center('column');\n    if (!yIsSame) {\n      yMatrix.center('column');\n    }\n  }\n  if (scale) {\n    xMatrix.scale('column');\n    if (!yIsSame) {\n      yMatrix.scale('column');\n    }\n  }\n\n  const sdx = xMatrix.standardDeviation('column', { unbiased: true });\n  const sdy = yIsSame\n    ? sdx\n    : yMatrix.standardDeviation('column', { unbiased: true });\n\n  const corr = xMatrix.transpose().mmul(yMatrix);\n  for (let i = 0; i < corr.rows; i++) {\n    for (let j = 0; j < corr.columns; j++) {\n      corr.set(\n        i,\n        j,\n        corr.get(i, j) * (1 / (sdx[i] * sdy[j])) * (1 / (xMatrix.rows - 1)),\n      );\n    }\n  }\n  return corr;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class EigenvalueDecomposition {\n  constructor(matrix, options = {}) {\n    const { assumeSymmetric = false } = options;\n\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n    if (!matrix.isSquare()) {\n      throw new Error('Matrix is not a square matrix');\n    }\n\n    if (matrix.isEmpty()) {\n      throw new Error('Matrix must be non-empty');\n    }\n\n    let n = matrix.columns;\n    let V = new Matrix(n, n);\n    let d = new Float64Array(n);\n    let e = new Float64Array(n);\n    let value = matrix;\n    let i, j;\n\n    let isSymmetric = false;\n    if (assumeSymmetric) {\n      isSymmetric = true;\n    } else {\n      isSymmetric = matrix.isSymmetric();\n    }\n\n    if (isSymmetric) {\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          V.set(i, j, value.get(i, j));\n        }\n      }\n      tred2(n, e, d, V);\n      tql2(n, e, d, V);\n    } else {\n      let H = new Matrix(n, n);\n      let ort = new Float64Array(n);\n      for (j = 0; j < n; j++) {\n        for (i = 0; i < n; i++) {\n          H.set(i, j, value.get(i, j));\n        }\n      }\n      orthes(n, H, ort, V);\n      hqr2(n, e, d, V, H);\n    }\n\n    this.n = n;\n    this.e = e;\n    this.d = d;\n    this.V = V;\n  }\n\n  get realEigenvalues() {\n    return Array.from(this.d);\n  }\n\n  get imaginaryEigenvalues() {\n    return Array.from(this.e);\n  }\n\n  get eigenvectorMatrix() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    let n = this.n;\n    let e = this.e;\n    let d = this.d;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        X.set(i, j, 0);\n      }\n      X.set(i, i, d[i]);\n      if (e[i] > 0) {\n        X.set(i, i + 1, e[i]);\n      } else if (e[i] < 0) {\n        X.set(i, i - 1, e[i]);\n      }\n    }\n    return X;\n  }\n}\n\nfunction tred2(n, e, d, V) {\n  let f, g, h, i, j, k, hh, scale;\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n  }\n\n  for (i = n - 1; i > 0; i--) {\n    scale = 0;\n    h = 0;\n    for (k = 0; k < i; k++) {\n      scale = scale + Math.abs(d[k]);\n    }\n\n    if (scale === 0) {\n      e[i] = d[i - 1];\n      for (j = 0; j < i; j++) {\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n        V.set(j, i, 0);\n      }\n    } else {\n      for (k = 0; k < i; k++) {\n        d[k] /= scale;\n        h += d[k] * d[k];\n      }\n\n      f = d[i - 1];\n      g = Math.sqrt(h);\n      if (f > 0) {\n        g = -g;\n      }\n\n      e[i] = scale * g;\n      h = h - f * g;\n      d[i - 1] = f - g;\n      for (j = 0; j < i; j++) {\n        e[j] = 0;\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        V.set(j, i, f);\n        g = e[j] + V.get(j, j) * f;\n        for (k = j + 1; k <= i - 1; k++) {\n          g += V.get(k, j) * d[k];\n          e[k] += V.get(k, j) * f;\n        }\n        e[j] = g;\n      }\n\n      f = 0;\n      for (j = 0; j < i; j++) {\n        e[j] /= h;\n        f += e[j] * d[j];\n      }\n\n      hh = f / (h + h);\n      for (j = 0; j < i; j++) {\n        e[j] -= hh * d[j];\n      }\n\n      for (j = 0; j < i; j++) {\n        f = d[j];\n        g = e[j];\n        for (k = j; k <= i - 1; k++) {\n          V.set(k, j, V.get(k, j) - (f * e[k] + g * d[k]));\n        }\n        d[j] = V.get(i - 1, j);\n        V.set(i, j, 0);\n      }\n    }\n    d[i] = h;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    V.set(n - 1, i, V.get(i, i));\n    V.set(i, i, 1);\n    h = d[i + 1];\n    if (h !== 0) {\n      for (k = 0; k <= i; k++) {\n        d[k] = V.get(k, i + 1) / h;\n      }\n\n      for (j = 0; j <= i; j++) {\n        g = 0;\n        for (k = 0; k <= i; k++) {\n          g += V.get(k, i + 1) * V.get(k, j);\n        }\n        for (k = 0; k <= i; k++) {\n          V.set(k, j, V.get(k, j) - g * d[k]);\n        }\n      }\n    }\n\n    for (k = 0; k <= i; k++) {\n      V.set(k, i + 1, 0);\n    }\n  }\n\n  for (j = 0; j < n; j++) {\n    d[j] = V.get(n - 1, j);\n    V.set(n - 1, j, 0);\n  }\n\n  V.set(n - 1, n - 1, 1);\n  e[0] = 0;\n}\n\nfunction tql2(n, e, d, V) {\n  let g, h, i, j, k, l, m, p, r, dl1, c, c2, c3, el1, s, s2, iter;\n\n  for (i = 1; i < n; i++) {\n    e[i - 1] = e[i];\n  }\n\n  e[n - 1] = 0;\n\n  let f = 0;\n  let tst1 = 0;\n  let eps = Number.EPSILON;\n\n  for (l = 0; l < n; l++) {\n    tst1 = Math.max(tst1, Math.abs(d[l]) + Math.abs(e[l]));\n    m = l;\n    while (m < n) {\n      if (Math.abs(e[m]) <= eps * tst1) {\n        break;\n      }\n      m++;\n    }\n\n    if (m > l) {\n      iter = 0;\n      do {\n        iter = iter + 1;\n\n        g = d[l];\n        p = (d[l + 1] - g) / (2 * e[l]);\n        r = hypotenuse(p, 1);\n        if (p < 0) {\n          r = -r;\n        }\n\n        d[l] = e[l] / (p + r);\n        d[l + 1] = e[l] * (p + r);\n        dl1 = d[l + 1];\n        h = g - d[l];\n        for (i = l + 2; i < n; i++) {\n          d[i] -= h;\n        }\n\n        f = f + h;\n\n        p = d[m];\n        c = 1;\n        c2 = c;\n        c3 = c;\n        el1 = e[l + 1];\n        s = 0;\n        s2 = 0;\n        for (i = m - 1; i >= l; i--) {\n          c3 = c2;\n          c2 = c;\n          s2 = s;\n          g = c * e[i];\n          h = c * p;\n          r = hypotenuse(p, e[i]);\n          e[i + 1] = s * r;\n          s = e[i] / r;\n          c = p / r;\n          p = c * d[i] - s * g;\n          d[i + 1] = h + s * (c * g + s * d[i]);\n\n          for (k = 0; k < n; k++) {\n            h = V.get(k, i + 1);\n            V.set(k, i + 1, s * V.get(k, i) + c * h);\n            V.set(k, i, c * V.get(k, i) - s * h);\n          }\n        }\n\n        p = (-s * s2 * c3 * el1 * e[l]) / dl1;\n        e[l] = s * p;\n        d[l] = c * p;\n      } while (Math.abs(e[l]) > eps * tst1);\n    }\n    d[l] = d[l] + f;\n    e[l] = 0;\n  }\n\n  for (i = 0; i < n - 1; i++) {\n    k = i;\n    p = d[i];\n    for (j = i + 1; j < n; j++) {\n      if (d[j] < p) {\n        k = j;\n        p = d[j];\n      }\n    }\n\n    if (k !== i) {\n      d[k] = d[i];\n      d[i] = p;\n      for (j = 0; j < n; j++) {\n        p = V.get(j, i);\n        V.set(j, i, V.get(j, k));\n        V.set(j, k, p);\n      }\n    }\n  }\n}\n\nfunction orthes(n, H, ort, V) {\n  let low = 0;\n  let high = n - 1;\n  let f, g, h, i, j, m;\n  let scale;\n\n  for (m = low + 1; m <= high - 1; m++) {\n    scale = 0;\n    for (i = m; i <= high; i++) {\n      scale = scale + Math.abs(H.get(i, m - 1));\n    }\n\n    if (scale !== 0) {\n      h = 0;\n      for (i = high; i >= m; i--) {\n        ort[i] = H.get(i, m - 1) / scale;\n        h += ort[i] * ort[i];\n      }\n\n      g = Math.sqrt(h);\n      if (ort[m] > 0) {\n        g = -g;\n      }\n\n      h = h - ort[m] * g;\n      ort[m] = ort[m] - g;\n\n      for (j = m; j < n; j++) {\n        f = 0;\n        for (i = high; i >= m; i--) {\n          f += ort[i] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (i = m; i <= high; i++) {\n          H.set(i, j, H.get(i, j) - f * ort[i]);\n        }\n      }\n\n      for (i = 0; i <= high; i++) {\n        f = 0;\n        for (j = high; j >= m; j--) {\n          f += ort[j] * H.get(i, j);\n        }\n\n        f = f / h;\n        for (j = m; j <= high; j++) {\n          H.set(i, j, H.get(i, j) - f * ort[j]);\n        }\n      }\n\n      ort[m] = scale * ort[m];\n      H.set(m, m - 1, scale * g);\n    }\n  }\n\n  for (i = 0; i < n; i++) {\n    for (j = 0; j < n; j++) {\n      V.set(i, j, i === j ? 1 : 0);\n    }\n  }\n\n  for (m = high - 1; m >= low + 1; m--) {\n    if (H.get(m, m - 1) !== 0) {\n      for (i = m + 1; i <= high; i++) {\n        ort[i] = H.get(i, m - 1);\n      }\n\n      for (j = m; j <= high; j++) {\n        g = 0;\n        for (i = m; i <= high; i++) {\n          g += ort[i] * V.get(i, j);\n        }\n\n        g = g / ort[m] / H.get(m, m - 1);\n        for (i = m; i <= high; i++) {\n          V.set(i, j, V.get(i, j) + g * ort[i]);\n        }\n      }\n    }\n  }\n}\n\nfunction hqr2(nn, e, d, V, H) {\n  let n = nn - 1;\n  let low = 0;\n  let high = nn - 1;\n  let eps = Number.EPSILON;\n  let exshift = 0;\n  let norm = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let z = 0;\n  let iter = 0;\n  let i, j, k, l, m, t, w, x, y;\n  let ra, sa, vr, vi;\n  let notlast, cdivres;\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      d[i] = H.get(i, i);\n      e[i] = 0;\n    }\n\n    for (j = Math.max(i - 1, 0); j < nn; j++) {\n      norm = norm + Math.abs(H.get(i, j));\n    }\n  }\n\n  while (n >= low) {\n    l = n;\n    while (l > low) {\n      s = Math.abs(H.get(l - 1, l - 1)) + Math.abs(H.get(l, l));\n      if (s === 0) {\n        s = norm;\n      }\n      if (Math.abs(H.get(l, l - 1)) < eps * s) {\n        break;\n      }\n      l--;\n    }\n\n    if (l === n) {\n      H.set(n, n, H.get(n, n) + exshift);\n      d[n] = H.get(n, n);\n      e[n] = 0;\n      n--;\n      iter = 0;\n    } else if (l === n - 1) {\n      w = H.get(n, n - 1) * H.get(n - 1, n);\n      p = (H.get(n - 1, n - 1) - H.get(n, n)) / 2;\n      q = p * p + w;\n      z = Math.sqrt(Math.abs(q));\n      H.set(n, n, H.get(n, n) + exshift);\n      H.set(n - 1, n - 1, H.get(n - 1, n - 1) + exshift);\n      x = H.get(n, n);\n\n      if (q >= 0) {\n        z = p >= 0 ? p + z : p - z;\n        d[n - 1] = x + z;\n        d[n] = d[n - 1];\n        if (z !== 0) {\n          d[n] = x - w / z;\n        }\n        e[n - 1] = 0;\n        e[n] = 0;\n        x = H.get(n, n - 1);\n        s = Math.abs(x) + Math.abs(z);\n        p = x / s;\n        q = z / s;\n        r = Math.sqrt(p * p + q * q);\n        p = p / r;\n        q = q / r;\n\n        for (j = n - 1; j < nn; j++) {\n          z = H.get(n - 1, j);\n          H.set(n - 1, j, q * z + p * H.get(n, j));\n          H.set(n, j, q * H.get(n, j) - p * z);\n        }\n\n        for (i = 0; i <= n; i++) {\n          z = H.get(i, n - 1);\n          H.set(i, n - 1, q * z + p * H.get(i, n));\n          H.set(i, n, q * H.get(i, n) - p * z);\n        }\n\n        for (i = low; i <= high; i++) {\n          z = V.get(i, n - 1);\n          V.set(i, n - 1, q * z + p * V.get(i, n));\n          V.set(i, n, q * V.get(i, n) - p * z);\n        }\n      } else {\n        d[n - 1] = x + p;\n        d[n] = x + p;\n        e[n - 1] = z;\n        e[n] = -z;\n      }\n\n      n = n - 2;\n      iter = 0;\n    } else {\n      x = H.get(n, n);\n      y = 0;\n      w = 0;\n      if (l < n) {\n        y = H.get(n - 1, n - 1);\n        w = H.get(n, n - 1) * H.get(n - 1, n);\n      }\n\n      if (iter === 10) {\n        exshift += x;\n        for (i = low; i <= n; i++) {\n          H.set(i, i, H.get(i, i) - x);\n        }\n        s = Math.abs(H.get(n, n - 1)) + Math.abs(H.get(n - 1, n - 2));\n        x = y = 0.75 * s;\n        w = -0.4375 * s * s;\n      }\n\n      if (iter === 30) {\n        s = (y - x) / 2;\n        s = s * s + w;\n        if (s > 0) {\n          s = Math.sqrt(s);\n          if (y < x) {\n            s = -s;\n          }\n          s = x - w / ((y - x) / 2 + s);\n          for (i = low; i <= n; i++) {\n            H.set(i, i, H.get(i, i) - s);\n          }\n          exshift += s;\n          x = y = w = 0.964;\n        }\n      }\n\n      iter = iter + 1;\n\n      m = n - 2;\n      while (m >= l) {\n        z = H.get(m, m);\n        r = x - z;\n        s = y - z;\n        p = (r * s - w) / H.get(m + 1, m) + H.get(m, m + 1);\n        q = H.get(m + 1, m + 1) - z - r - s;\n        r = H.get(m + 2, m + 1);\n        s = Math.abs(p) + Math.abs(q) + Math.abs(r);\n        p = p / s;\n        q = q / s;\n        r = r / s;\n        if (m === l) {\n          break;\n        }\n        if (\n          Math.abs(H.get(m, m - 1)) * (Math.abs(q) + Math.abs(r)) <\n          eps *\n            (Math.abs(p) *\n              (Math.abs(H.get(m - 1, m - 1)) +\n                Math.abs(z) +\n                Math.abs(H.get(m + 1, m + 1))))\n        ) {\n          break;\n        }\n        m--;\n      }\n\n      for (i = m + 2; i <= n; i++) {\n        H.set(i, i - 2, 0);\n        if (i > m + 2) {\n          H.set(i, i - 3, 0);\n        }\n      }\n\n      for (k = m; k <= n - 1; k++) {\n        notlast = k !== n - 1;\n        if (k !== m) {\n          p = H.get(k, k - 1);\n          q = H.get(k + 1, k - 1);\n          r = notlast ? H.get(k + 2, k - 1) : 0;\n          x = Math.abs(p) + Math.abs(q) + Math.abs(r);\n          if (x !== 0) {\n            p = p / x;\n            q = q / x;\n            r = r / x;\n          }\n        }\n\n        if (x === 0) {\n          break;\n        }\n\n        s = Math.sqrt(p * p + q * q + r * r);\n        if (p < 0) {\n          s = -s;\n        }\n\n        if (s !== 0) {\n          if (k !== m) {\n            H.set(k, k - 1, -s * x);\n          } else if (l !== m) {\n            H.set(k, k - 1, -H.get(k, k - 1));\n          }\n\n          p = p + s;\n          x = p / s;\n          y = q / s;\n          z = r / s;\n          q = q / p;\n          r = r / p;\n\n          for (j = k; j < nn; j++) {\n            p = H.get(k, j) + q * H.get(k + 1, j);\n            if (notlast) {\n              p = p + r * H.get(k + 2, j);\n              H.set(k + 2, j, H.get(k + 2, j) - p * z);\n            }\n\n            H.set(k, j, H.get(k, j) - p * x);\n            H.set(k + 1, j, H.get(k + 1, j) - p * y);\n          }\n\n          for (i = 0; i <= Math.min(n, k + 3); i++) {\n            p = x * H.get(i, k) + y * H.get(i, k + 1);\n            if (notlast) {\n              p = p + z * H.get(i, k + 2);\n              H.set(i, k + 2, H.get(i, k + 2) - p * r);\n            }\n\n            H.set(i, k, H.get(i, k) - p);\n            H.set(i, k + 1, H.get(i, k + 1) - p * q);\n          }\n\n          for (i = low; i <= high; i++) {\n            p = x * V.get(i, k) + y * V.get(i, k + 1);\n            if (notlast) {\n              p = p + z * V.get(i, k + 2);\n              V.set(i, k + 2, V.get(i, k + 2) - p * r);\n            }\n\n            V.set(i, k, V.get(i, k) - p);\n            V.set(i, k + 1, V.get(i, k + 1) - p * q);\n          }\n        }\n      }\n    }\n  }\n\n  if (norm === 0) {\n    return;\n  }\n\n  for (n = nn - 1; n >= 0; n--) {\n    p = d[n];\n    q = e[n];\n\n    if (q === 0) {\n      l = n;\n      H.set(n, n, 1);\n      for (i = n - 1; i >= 0; i--) {\n        w = H.get(i, i) - p;\n        r = 0;\n        for (j = l; j <= n; j++) {\n          r = r + H.get(i, j) * H.get(j, n);\n        }\n\n        if (e[i] < 0) {\n          z = w;\n          s = r;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            H.set(i, n, w !== 0 ? -r / w : -r / (eps * norm));\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            q = (d[i] - p) * (d[i] - p) + e[i] * e[i];\n            t = (x * s - z * r) / q;\n            H.set(i, n, t);\n            H.set(\n              i + 1,\n              n,\n              Math.abs(x) > Math.abs(z) ? (-r - w * t) / x : (-s - y * t) / z,\n            );\n          }\n\n          t = Math.abs(H.get(i, n));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    } else if (q < 0) {\n      l = n - 1;\n\n      if (Math.abs(H.get(n, n - 1)) > Math.abs(H.get(n - 1, n))) {\n        H.set(n - 1, n - 1, q / H.get(n, n - 1));\n        H.set(n - 1, n, -(H.get(n, n) - p) / H.get(n, n - 1));\n      } else {\n        cdivres = cdiv(0, -H.get(n - 1, n), H.get(n - 1, n - 1) - p, q);\n        H.set(n - 1, n - 1, cdivres[0]);\n        H.set(n - 1, n, cdivres[1]);\n      }\n\n      H.set(n, n - 1, 0);\n      H.set(n, n, 1);\n      for (i = n - 2; i >= 0; i--) {\n        ra = 0;\n        sa = 0;\n        for (j = l; j <= n; j++) {\n          ra = ra + H.get(i, j) * H.get(j, n - 1);\n          sa = sa + H.get(i, j) * H.get(j, n);\n        }\n\n        w = H.get(i, i) - p;\n\n        if (e[i] < 0) {\n          z = w;\n          r = ra;\n          s = sa;\n        } else {\n          l = i;\n          if (e[i] === 0) {\n            cdivres = cdiv(-ra, -sa, w, q);\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n          } else {\n            x = H.get(i, i + 1);\n            y = H.get(i + 1, i);\n            vr = (d[i] - p) * (d[i] - p) + e[i] * e[i] - q * q;\n            vi = (d[i] - p) * 2 * q;\n            if (vr === 0 && vi === 0) {\n              vr =\n                eps *\n                norm *\n                (Math.abs(w) +\n                  Math.abs(q) +\n                  Math.abs(x) +\n                  Math.abs(y) +\n                  Math.abs(z));\n            }\n            cdivres = cdiv(\n              x * r - z * ra + q * sa,\n              x * s - z * sa - q * ra,\n              vr,\n              vi,\n            );\n            H.set(i, n - 1, cdivres[0]);\n            H.set(i, n, cdivres[1]);\n            if (Math.abs(x) > Math.abs(z) + Math.abs(q)) {\n              H.set(\n                i + 1,\n                n - 1,\n                (-ra - w * H.get(i, n - 1) + q * H.get(i, n)) / x,\n              );\n              H.set(\n                i + 1,\n                n,\n                (-sa - w * H.get(i, n) - q * H.get(i, n - 1)) / x,\n              );\n            } else {\n              cdivres = cdiv(\n                -r - y * H.get(i, n - 1),\n                -s - y * H.get(i, n),\n                z,\n                q,\n              );\n              H.set(i + 1, n - 1, cdivres[0]);\n              H.set(i + 1, n, cdivres[1]);\n            }\n          }\n\n          t = Math.max(Math.abs(H.get(i, n - 1)), Math.abs(H.get(i, n)));\n          if (eps * t * t > 1) {\n            for (j = i; j <= n; j++) {\n              H.set(j, n - 1, H.get(j, n - 1) / t);\n              H.set(j, n, H.get(j, n) / t);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0; i < nn; i++) {\n    if (i < low || i > high) {\n      for (j = i; j < nn; j++) {\n        V.set(i, j, H.get(i, j));\n      }\n    }\n  }\n\n  for (j = nn - 1; j >= low; j--) {\n    for (i = low; i <= high; i++) {\n      z = 0;\n      for (k = low; k <= Math.min(j, high); k++) {\n        z = z + V.get(i, k) * H.get(k, j);\n      }\n      V.set(i, j, z);\n    }\n  }\n}\n\nfunction cdiv(xr, xi, yr, yi) {\n  let r, d;\n  if (Math.abs(yr) > Math.abs(yi)) {\n    r = yi / yr;\n    d = yr + r * yi;\n    return [(xr + r * xi) / d, (xi - r * xr) / d];\n  } else {\n    r = yr / yi;\n    d = yi + r * yr;\n    return [(r * xr + xi) / d, (r * xi - xr) / d];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class CholeskyDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n    if (!value.isSymmetric()) {\n      throw new Error('Matrix is not symmetric');\n    }\n\n    let a = value;\n    let dimension = a.rows;\n    let l = new Matrix(dimension, dimension);\n    let positiveDefinite = true;\n    let i, j, k;\n\n    for (j = 0; j < dimension; j++) {\n      let d = 0;\n      for (k = 0; k < j; k++) {\n        let s = 0;\n        for (i = 0; i < k; i++) {\n          s += l.get(k, i) * l.get(j, i);\n        }\n        s = (a.get(j, k) - s) / l.get(k, k);\n        l.set(j, k, s);\n        d = d + s * s;\n      }\n\n      d = a.get(j, j) - d;\n\n      positiveDefinite &= d > 0;\n      l.set(j, j, Math.sqrt(Math.max(d, 0)));\n      for (k = j + 1; k < dimension; k++) {\n        l.set(j, k, 0);\n      }\n    }\n\n    this.L = l;\n    this.positiveDefinite = Boolean(positiveDefinite);\n  }\n\n  isPositiveDefinite() {\n    return this.positiveDefinite;\n  }\n\n  solve(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let l = this.L;\n    let dimension = l.rows;\n\n    if (value.rows !== dimension) {\n      throw new Error('Matrix dimensions do not match');\n    }\n    if (this.isPositiveDefinite() === false) {\n      throw new Error('Matrix is not positive definite');\n    }\n\n    let count = value.columns;\n    let B = value.clone();\n    let i, j, k;\n\n    for (k = 0; k < dimension; k++) {\n      for (j = 0; j < count; j++) {\n        for (i = 0; i < k; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(k, i));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    for (k = dimension - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        for (i = k + 1; i < dimension; i++) {\n          B.set(k, j, B.get(k, j) - B.get(i, j) * l.get(i, k));\n        }\n        B.set(k, j, B.get(k, j) / l.get(k, k));\n      }\n    }\n\n    return B;\n  }\n\n  get lowerTriangularMatrix() {\n    return this.L;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class nipals {\n  constructor(X, options = {}) {\n    X = WrapperMatrix2D.checkMatrix(X);\n    let { Y } = options;\n    const {\n      scaleScores = false,\n      maxIterations = 1000,\n      terminationCriteria = 1e-10,\n    } = options;\n\n    let u;\n    if (Y) {\n      if (Array.isArray(Y) && typeof Y[0] === 'number') {\n        Y = Matrix.columnVector(Y);\n      } else {\n        Y = WrapperMatrix2D.checkMatrix(Y);\n      }\n      if (!Y.isColumnVector() || Y.rows !== X.rows) {\n        throw new Error('Y must be a column vector of length X.rows');\n      }\n      u = Y;\n    } else {\n      u = X.getColumnVector(0);\n    }\n\n    let diff = 1;\n    let t, q, w, tOld;\n\n    for (\n      let counter = 0;\n      counter < maxIterations && diff > terminationCriteria;\n      counter++\n    ) {\n      w = X.transpose().mmul(u).div(u.transpose().mmul(u).get(0, 0));\n      w = w.div(w.norm());\n\n      t = X.mmul(w).div(w.transpose().mmul(w).get(0, 0));\n\n      if (counter > 0) {\n        diff = t.clone().sub(tOld).pow(2).sum();\n      }\n      tOld = t.clone();\n\n      if (Y) {\n        q = Y.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n        q = q.div(q.norm());\n\n        u = Y.mmul(q).div(q.transpose().mmul(q).get(0, 0));\n      } else {\n        u = t;\n      }\n    }\n\n    if (Y) {\n      let p = X.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      p = p.div(p.norm());\n      let xResidual = X.clone().sub(t.clone().mmul(p.transpose()));\n      let residual = u.transpose().mmul(t).div(t.transpose().mmul(t).get(0, 0));\n      let yResidual = Y.clone().sub(\n        t.clone().mulS(residual.get(0, 0)).mmul(q.transpose()),\n      );\n\n      this.t = t;\n      this.p = p.transpose();\n      this.w = w.transpose();\n      this.q = q;\n      this.u = u;\n      this.s = t.transpose().mmul(t);\n      this.xResidual = xResidual;\n      this.yResidual = yResidual;\n      this.betas = residual;\n    } else {\n      this.w = w.transpose();\n      this.s = t.transpose().mmul(t).sqrt();\n      if (scaleScores) {\n        this.t = t.clone().div(this.s.get(0, 0));\n      } else {\n        this.t = t;\n      }\n      this.xResidual = X.sub(t.mmul(w.transpose()));\n    }\n  }\n}\n","export { AbstractMatrix, default, default as Matrix } from './matrix';\nexport * from './views/index';\n\nexport { wrap } from './wrap/wrap';\nexport { default as WrapperMatrix1D } from './wrap/WrapperMatrix1D';\nexport { default as WrapperMatrix2D } from './wrap/WrapperMatrix2D';\n\nexport { solve, inverse } from './decompositions';\nexport { determinant } from './determinant';\nexport { linearDependencies } from './linearDependencies';\nexport { pseudoInverse } from './pseudoInverse';\nexport { covariance } from './covariance';\nexport { correlation } from './correlation';\n\nexport {\n  default as SingularValueDecomposition,\n  default as SVD,\n} from './dc/svd.js';\nexport {\n  default as EigenvalueDecomposition,\n  default as EVD,\n} from './dc/evd.js';\nexport {\n  default as CholeskyDecomposition,\n  default as CHO,\n} from './dc/cholesky.js';\nexport { default as LuDecomposition, default as LU } from './dc/lu.js';\nexport { default as QrDecomposition, default as QR } from './dc/qr.js';\nexport { default as Nipals, default as NIPALS } from './dc/nipals.js';\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision,\n} from 'ml-regression-base';\nimport { Matrix, MatrixTransposeView, solve } from 'ml-matrix';\n\nexport default class PolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y, degree);\n    }\n  }\n\n  _predict(x) {\n    let y = 0;\n    for (let k = 0; k < this.powers.length; k++) {\n      y += this.coefficients[k] * Math.pow(x, this.powers[k]);\n    }\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients,\n    };\n  }\n\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'polynomialRegression') {\n      throw new TypeError('not a polynomial regression model');\n    }\n    return new PolynomialRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y, degree) {\n  const n = x.length;\n  let powers;\n  if (Array.isArray(degree)) {\n    powers = degree;\n    degree = powers.length;\n  } else {\n    degree++;\n    powers = new Array(degree);\n    for (let k = 0; k < degree; k++) {\n      powers[k] = k;\n    }\n  }\n  const F = new Matrix(n, degree);\n  const Y = new Matrix([y]);\n  for (let k = 0; k < degree; k++) {\n    for (let i = 0; i < n; i++) {\n      if (powers[k] === 0) {\n        F.set(i, k, 1);\n      } else {\n        F.set(i, k, Math.pow(x[i], powers[k]));\n      }\n    }\n  }\n\n  const FT = new MatrixTransposeView(F);\n  const A = FT.mmul(F);\n  const B = FT.mmul(new MatrixTransposeView(Y));\n\n  pr.degree = degree - 1;\n  pr.powers = powers;\n  pr.coefficients = solve(A, B).to1DArray();\n}\n","import BaseRegression, { maybeToPrecision } from 'ml-regression-base';\nimport PolynomialRegression from 'ml-regression-polynomial';\n\n\n/*\n * Function that calculate the potential fit in the form f(x) = A*x^M\n * with a given M and return de A coefficient.\n *\n * @param {Vector} X - Vector of the x positions of the points.\n * @param {Vector} Y - Vector of the x positions of the points.\n * @param {Number} M - The exponent of the potential fit.\n * @return {Number} A - The A coefficient of the potential fit.\n */\nexport default class PotentialRegression extends BaseRegression {\n  /**\n   * @constructor\n   * @param x: Independent variable\n   * @param y: Dependent variable\n   * @param M\n   */\n  constructor(x, y, M) {\n    super();\n    if (x === true) {\n      // reloading model\n      this.A = y.A;\n      this.M = y.M;\n    } else {\n      var n = x.length;\n      if (n !== y.length) {\n        throw new RangeError('input and output array have a different length');\n      }\n\n      var linear = new PolynomialRegression(x, y, [M]);\n      this.A = linear.coefficients[0];\n      this.M = M;\n    }\n  }\n\n  _predict(x) {\n    return this.A * Math.pow(x, this.M);\n  }\n\n  toJSON() {\n    return {\n      name: 'potentialRegression',\n      A: this.A,\n      M: this.M\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(this.A, precision)} * x^${this.M}`;\n  }\n\n  toLaTeX(precision) {\n    if (this.M >= 0) {\n      return (\n        `f(x) = ${maybeToPrecision(this.A, precision)}x^{${this.M}}`\n      );\n    } else {\n      return (\n        `f(x) = \\\\frac{${\n          maybeToPrecision(this.A, precision)\n        }}{x^{${\n          -this.M\n        }}}`\n      );\n    }\n  }\n\n  static load(json) {\n    if (json.name !== 'potentialRegression') {\n      throw new TypeError('not a potential regression model');\n    }\n    return new PotentialRegression(true, json);\n  }\n}\n","import BaseRegression, {\r\n  checkArrayLength,\r\n  maybeToPrecision,\r\n} from 'ml-regression-base';\r\n\r\nexport default class SimpleLinearRegression extends BaseRegression {\r\n  constructor(x, y) {\r\n    super();\r\n    if (x === true) {\r\n      this.slope = y.slope;\r\n      this.intercept = y.intercept;\r\n      this.coefficients = [y.intercept, y.slope];\r\n    } else {\r\n      checkArrayLength(x, y);\r\n      regress(this, x, y);\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      name: 'simpleLinearRegression',\r\n      slope: this.slope,\r\n      intercept: this.intercept,\r\n    };\r\n  }\r\n\r\n  _predict(x) {\r\n    return this.slope * x + this.intercept;\r\n  }\r\n\r\n  computeX(y) {\r\n    return (y - this.intercept) / this.slope;\r\n  }\r\n\r\n  toString(precision) {\r\n    let result = 'f(x) = ';\r\n    if (this.slope !== 0) {\r\n      const xFactor = maybeToPrecision(this.slope, precision);\r\n      result += `${xFactor === '1' ? '' : `${xFactor} * `}x`;\r\n      if (this.intercept !== 0) {\r\n        const absIntercept = Math.abs(this.intercept);\r\n        const operator = absIntercept === this.intercept ? '+' : '-';\r\n        result += ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\r\n      }\r\n    } else {\r\n      result += maybeToPrecision(this.intercept, precision);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toLaTeX(precision) {\r\n    return this.toString(precision);\r\n  }\r\n\r\n  static load(json) {\r\n    if (json.name !== 'simpleLinearRegression') {\r\n      throw new TypeError('not a SLR model');\r\n    }\r\n    return new SimpleLinearRegression(true, json);\r\n  }\r\n}\r\n\r\nfunction regress(slr, x, y) {\r\n  const n = x.length;\r\n  let xSum = 0;\r\n  let ySum = 0;\r\n\r\n  let xSquared = 0;\r\n  let xY = 0;\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    xSum += x[i];\r\n    ySum += y[i];\r\n    xSquared += x[i] * x[i];\r\n    xY += x[i] * y[i];\r\n  }\r\n\r\n  const numerator = n * xY - xSum * ySum;\r\n  slr.slope = numerator / (n * xSquared - xSum * xSum);\r\n  slr.intercept = (1 / n) * ySum - slr.slope * (1 / n) * xSum;\r\n  slr.coefficients = [slr.intercept, slr.slope];\r\n}\r\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class ExponentialRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(input) {\n    return this.B * Math.exp(input * this.A);\n  }\n\n  toJSON() {\n    return {\n      name: 'exponentialRegression',\n      A: this.A,\n      B: this.B\n    };\n  }\n\n  toString(precision) {\n    return (\n      `f(x) = ${\n        maybeToPrecision(this.B, precision)\n      } * e^(${\n        maybeToPrecision(this.A, precision)\n      } * x)`\n    );\n  }\n\n  toLaTeX(precision) {\n    if (this.A >= 0) {\n      return (\n        `f(x) = ${\n          maybeToPrecision(this.B, precision)\n        }e^{${\n          maybeToPrecision(this.A, precision)\n        }x}`\n      );\n    } else {\n      return (\n        `f(x) = \\\\frac{${\n          maybeToPrecision(this.B, precision)\n        }}{e^{${\n          maybeToPrecision(-this.A, precision)\n        }x}}`\n      );\n    }\n  }\n\n  static load(json) {\n    if (json.name !== 'exponentialRegression') {\n      throw new TypeError('not a exponential regression model');\n    }\n    return new ExponentialRegression(true, json);\n  }\n}\n\nfunction regress(er, x, y) {\n  const n = x.length;\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(x, yl);\n  er.A = linear.slope;\n  er.B = Math.exp(linear.intercept);\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\n\nexport default class PowerRegression extends BaseRegression {\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // reloading model\n      this.A = y.A;\n      this.B = y.B;\n    } else {\n      checkArrayLength(x, y);\n      regress(this, x, y);\n    }\n  }\n\n  _predict(newInputs) {\n    return this.A * Math.pow(newInputs, this.B);\n  }\n\n  toJSON() {\n    return {\n      name: 'powerRegression',\n      A: this.A,\n      B: this.B\n    };\n  }\n\n  toString(precision) {\n    return `f(x) = ${maybeToPrecision(\n      this.A,\n      precision\n    )} * x^${maybeToPrecision(this.B, precision)}`;\n  }\n\n  toLaTeX(precision) {\n    let latex = '';\n    if (this.B >= 0) {\n      latex = `f(x) = ${maybeToPrecision(\n        this.A,\n        precision\n      )}x^{${maybeToPrecision(this.B, precision)}}`;\n    } else {\n      latex = `f(x) = \\\\frac{${maybeToPrecision(\n        this.A,\n        precision\n      )}}{x^{${maybeToPrecision(-this.B, precision)}}}`;\n    }\n    latex = latex.replace(/e([+-]?[0-9]+)/g, 'e^{$1}');\n    return latex;\n  }\n\n  static load(json) {\n    if (json.name !== 'powerRegression') {\n      throw new TypeError('not a power regression model');\n    }\n    return new PowerRegression(true, json);\n  }\n}\n\nfunction regress(pr, x, y) {\n  const n = x.length;\n  const xl = new Array(n);\n  const yl = new Array(n);\n  for (let i = 0; i < n; i++) {\n    xl[i] = Math.log(x[i]);\n    yl[i] = Math.log(y[i]);\n  }\n\n  const linear = new SimpleLinearRegression(xl, yl);\n  pr.A = Math.exp(linear.intercept);\n  pr.B = linear.slope;\n}\n","import Matrix, { SVD, pseudoInverse } from 'ml-matrix';\n\nexport default class MultivariateLinearRegression {\n  constructor(x, y, options = {}) {\n    const { intercept = true, statistics = true } = options;\n    this.statistics = statistics;\n    if (x === true) {\n      this.weights = y.weights;\n      this.inputs = y.inputs;\n      this.outputs = y.outputs;\n      this.intercept = y.intercept;\n    } else {\n      x = new Matrix(x);\n      y = new Matrix(y);\n      if (intercept) {\n        x.addColumn(new Array(x.rows).fill(1));\n      }\n      let xt = x.transpose();\n      const xx = xt.mmul(x);\n      const xy = xt.mmul(y);\n      const invxx = new SVD(xx).inverse();\n      const beta = xy\n        .transpose()\n        .mmul(invxx)\n        .transpose();\n      this.weights = beta.to2DArray();\n      this.inputs = x.columns;\n      this.outputs = y.columns;\n      if (intercept) this.inputs--;\n      this.intercept = intercept;\n      if (statistics) {\n        /*\n         * Let's add some basic statistics about the beta's to be able to interpret them.\n         * source: http://dept.stat.lsa.umich.edu/~kshedden/Courses/Stat401/Notes/401-multreg.pdf\n         * validated against Excel Regression AddIn\n         * test: \"datamining statistics test\"\n         */\n        const fittedValues = x.mmul(beta);\n        const residuals = y.clone().addM(fittedValues.neg());\n        const variance =\n          residuals\n            .to2DArray()\n            .map((ri) => Math.pow(ri[0], 2))\n            .reduce((a, b) => a + b) /\n          (y.rows - x.columns);\n        this.stdError = Math.sqrt(variance);\n        this.stdErrorMatrix = pseudoInverse(xx).mul(variance);\n        this.stdErrors = this.stdErrorMatrix\n          .diagonal()\n          .map((d) => Math.sqrt(d));\n        this.tStats = this.weights.map((d, i) =>\n          this.stdErrors[i] === 0 ? 0 : d[0] / this.stdErrors[i],\n        );\n      }\n    }\n  }\n\n  predict(x) {\n    if (Array.isArray(x)) {\n      if (typeof x[0] === 'number') {\n        return this._predict(x);\n      } else if (Array.isArray(x[0])) {\n        const y = new Array(x.length);\n        for (let i = 0; i < x.length; i++) {\n          y[i] = this._predict(x[i]);\n        }\n        return y;\n      }\n    } else if (Matrix.isMatrix(x)) {\n      const y = new Matrix(x.rows, this.outputs);\n      for (let i = 0; i < x.rows; i++) {\n        y.setRow(i, this._predict(x.getRow(i)));\n      }\n      return y;\n    }\n    throw new TypeError('x must be a matrix or array of numbers');\n  }\n\n  _predict(x) {\n    const result = new Array(this.outputs);\n    if (this.intercept) {\n      for (let i = 0; i < this.outputs; i++) {\n        result[i] = this.weights[this.inputs][i];\n      }\n    } else {\n      result.fill(0);\n    }\n    for (let i = 0; i < this.inputs; i++) {\n      for (let j = 0; j < this.outputs; j++) {\n        result[j] += this.weights[i][j] * x[i];\n      }\n    }\n    return result;\n  }\n\n  score() {\n    throw new Error('score method is not implemented yet');\n  }\n\n  toJSON() {\n    return {\n      name: 'multivariateLinearRegression',\n      weights: this.weights,\n      inputs: this.inputs,\n      outputs: this.outputs,\n      intercept: this.intercept,\n      summary: this.statistics\n        ? {\n            regressionStatistics: {\n              standardError: this.stdError,\n              observations: this.outputs,\n            },\n            variables: this.weights.map((d, i) => {\n              return {\n                label:\n                  i === this.weights.length - 1\n                    ? 'Intercept'\n                    : `X Variable ${i + 1}`,\n                coefficients: d,\n                standardError: this.stdErrors[i],\n                tStat: this.tStats[i],\n              };\n            }),\n          }\n        : undefined,\n    };\n  }\n\n  static load(model) {\n    if (model.name !== 'multivariateLinearRegression') {\n      throw new Error('not a MLR model');\n    }\n    return new MultivariateLinearRegression(true, model);\n  }\n}\n","export function squaredEuclidean(p, q) {\r\n    let d = 0;\r\n    for (let i = 0; i < p.length; i++) {\r\n        d += (p[i] - q[i]) * (p[i] - q[i]);\r\n    }\r\n    return d;\r\n}\r\nexport function euclidean(p, q) {\r\n    return Math.sqrt(squaredEuclidean(p, q));\r\n}\r\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass GaussianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = GaussianKernel;\n","'use strict';\n\nconst defaultOptions = {\n  degree: 1,\n  constant: 1,\n  scale: 1\n};\n\nclass PolynomialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    this.degree = options.degree;\n    this.constant = options.constant;\n    this.scale = options.scale;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.pow(this.scale * sum + this.constant, this.degree);\n  }\n}\n\nmodule.exports = PolynomialKernel;\n","'use strict';\n\nconst defaultOptions = {\n  alpha: 0.01,\n  constant: -Math.E\n};\n\nclass SigmoidKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.alpha = options.alpha;\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    for (var i = 0; i < x.length; i++) {\n      sum += x[i] * y[i];\n    }\n    return Math.tanh(this.alpha * sum + this.constant);\n  }\n}\n\nmodule.exports = SigmoidKernel;\n","'use strict';\n\nconst defaultOptions = {\n  sigma: 1,\n  degree: 1\n};\n\nclass ANOVAKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.degree = options.degree;\n  }\n\n  compute(x, y) {\n    var sum = 0;\n    var len = Math.min(x.length, y.length);\n    for (var i = 1; i <= len; ++i) {\n      sum += Math.pow(\n        Math.exp(\n          -this.sigma *\n            Math.pow(Math.pow(x[i - 1], i) - Math.pow(y[i - 1], i), 2)\n        ),\n        this.degree\n      );\n    }\n    return sum;\n  }\n}\n\nmodule.exports = ANOVAKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass CauchyKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    return 1 / (1 + squaredEuclidean(x, y) / (this.sigma * this.sigma));\n  }\n}\n\nmodule.exports = CauchyKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass ExponentialKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n    this.divisor = 2 * options.sigma * options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.divisor);\n  }\n}\n\nmodule.exports = ExponentialKernel;\n","'use strict';\n\nclass HistogramIntersectionKernel {\n  compute(x, y) {\n    var min = Math.min(x.length, y.length);\n    var sum = 0;\n    for (var i = 0; i < min; ++i) {\n      sum += Math.min(x[i], y[i]);\n    }\n\n    return sum;\n  }\n}\n\nmodule.exports = HistogramIntersectionKernel;\n","'use strict';\n\nconst { euclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  sigma: 1\n};\n\nclass LaplacianKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.sigma = options.sigma;\n  }\n\n  compute(x, y) {\n    const distance = euclidean(x, y);\n    return Math.exp(-distance / this.sigma);\n  }\n}\n\nmodule.exports = LaplacianKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass MultiquadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    return Math.sqrt(squaredEuclidean(x, y) + this.constant * this.constant);\n  }\n}\n\nmodule.exports = MultiquadraticKernel;\n","'use strict';\n\nconst { squaredEuclidean } = require('ml-distance-euclidean');\n\nconst defaultOptions = {\n  constant: 1\n};\n\nclass RationalQuadraticKernel {\n  constructor(options) {\n    options = Object.assign({}, defaultOptions, options);\n    this.constant = options.constant;\n  }\n\n  compute(x, y) {\n    const distance = squaredEuclidean(x, y);\n    return 1 - distance / (distance + this.constant);\n  }\n}\n\nmodule.exports = RationalQuadraticKernel;\n","'use strict';\n\nconst { Matrix, MatrixTransposeView } = require('ml-matrix');\nconst GaussianKernel = require('ml-kernel-gaussian');\nconst PolynomialKernel = require('ml-kernel-polynomial');\nconst SigmoidKernel = require('ml-kernel-sigmoid');\n\nconst ANOVAKernel = require('./kernels/anova-kernel');\nconst CauchyKernel = require('./kernels/cauchy-kernel');\nconst ExponentialKernel = require('./kernels/exponential-kernel');\nconst HistogramKernel = require('./kernels/histogram-intersection-kernel');\nconst LaplacianKernel = require('./kernels/laplacian-kernel');\nconst MultiquadraticKernel = require('./kernels/multiquadratic-kernel');\nconst RationalKernel = require('./kernels/rational-quadratic-kernel');\n\nconst kernelType = {\n  gaussian: GaussianKernel,\n  rbf: GaussianKernel,\n  polynomial: PolynomialKernel,\n  poly: PolynomialKernel,\n  anova: ANOVAKernel,\n  cauchy: CauchyKernel,\n  exponential: ExponentialKernel,\n  histogram: HistogramKernel,\n  min: HistogramKernel,\n  laplacian: LaplacianKernel,\n  multiquadratic: MultiquadraticKernel,\n  rational: RationalKernel,\n  sigmoid: SigmoidKernel,\n  mlp: SigmoidKernel\n};\n\nclass Kernel {\n  constructor(type, options) {\n    this.kernelType = type;\n    if (type === 'linear') return;\n\n    if (typeof type === 'string') {\n      type = type.toLowerCase();\n\n      var KernelConstructor = kernelType[type];\n      if (KernelConstructor) {\n        this.kernelFunction = new KernelConstructor(options);\n      } else {\n        throw new Error(`unsupported kernel type: ${type}`);\n      }\n    } else if (typeof type === 'object' && typeof type.compute === 'function') {\n      this.kernelFunction = type;\n    } else {\n      throw new TypeError(\n        'first argument must be a valid kernel type or instance'\n      );\n    }\n  }\n\n  compute(inputs, landmarks) {\n    inputs = Matrix.checkMatrix(inputs);\n    if (landmarks === undefined) {\n      landmarks = inputs;\n    } else {\n      landmarks = Matrix.checkMatrix(landmarks);\n    }\n    if (this.kernelType === 'linear') {\n      return inputs.mmul(new MatrixTransposeView(landmarks));\n    }\n\n    const kernelMatrix = new Matrix(inputs.rows, landmarks.rows);\n    if (inputs === landmarks) {\n      // fast path, matrix is symmetric\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = i; j < inputs.rows; j++) {\n          const value = this.kernelFunction.compute(\n            inputs.getRow(i),\n            inputs.getRow(j)\n          );\n          kernelMatrix.set(i, j, value);\n          kernelMatrix.set(j, i, value);\n        }\n      }\n    } else {\n      for (let i = 0; i < inputs.rows; i++) {\n        for (let j = 0; j < landmarks.rows; j++) {\n          kernelMatrix.set(\n            i,\n            j,\n            this.kernelFunction.compute(inputs.getRow(i), landmarks.getRow(j))\n          );\n        }\n      }\n    }\n    return kernelMatrix;\n  }\n}\n\nmodule.exports = Kernel;\n","import { Matrix, solve } from 'ml-matrix';\nimport Kernel from 'ml-kernel';\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n  lambda: 0.1,\n  kernelType: 'gaussian',\n  kernelOptions: {},\n  computeCoefficient: false\n};\n\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class KernelRidgeRegression extends BaseRegression {\n  constructor(inputs, outputs, options) {\n    super();\n    if (inputs === true) {\n      // reloading model\n      this.alpha = outputs.alpha;\n      this.inputs = outputs.inputs;\n      this.kernelType = outputs.kernelType;\n      this.kernelOptions = outputs.kernelOptions;\n      this.kernel = new Kernel(outputs.kernelType, outputs.kernelOptions);\n    } else {\n      inputs = Matrix.checkMatrix(inputs);\n      options = Object.assign({}, defaultOptions, options);\n\n      const kernelFunction = new Kernel(\n        options.kernelType,\n        options.kernelOptions\n      );\n      const K = kernelFunction.compute(inputs);\n      const n = inputs.rows;\n      K.add(Matrix.eye(n, n).mul(options.lambda));\n\n      this.alpha = solve(K, outputs);\n      this.inputs = inputs;\n      this.kernelType = options.kernelType;\n      this.kernelOptions = options.kernelOptions;\n      this.kernel = kernelFunction;\n    }\n  }\n\n  _predict(newInputs) {\n    return this.kernel\n      .compute([newInputs], this.inputs)\n      .mmul(this.alpha)\n      .getRow(0);\n  }\n\n  toJSON() {\n    return {\n      name: 'kernelRidgeRegression',\n      alpha: this.alpha,\n      inputs: this.inputs,\n      kernelType: this.kernelType,\n      kernelOptions: this.kernelOptions\n    };\n  }\n\n  static load(json) {\n    if (json.name !== 'kernelRidgeRegression') {\n      throw new TypeError('not a KRR model');\n    }\n    return new KernelRidgeRegression(true, json);\n  }\n}\n","import { Matrix, SVD } from 'ml-matrix';\nimport BaseRegression from 'ml-regression-base';\n\nconst defaultOptions = {\n  order: 2\n};\n// Implements the Kernel ridge regression algorithm.\n// http://www.ics.uci.edu/~welling/classnotes/papers_class/Kernel-Ridge.pdf\nexport default class PolynomialFitRegression2D extends BaseRegression {\n  /**\n   * Constructor for the 2D polynomial fitting\n   *\n   * @param inputs\n   * @param outputs\n   * @param options\n   * @constructor\n   */\n  constructor(inputs, outputs, options) {\n    super();\n    if (inputs === true) {\n      // reloading model\n      this.coefficients = Matrix.columnVector(outputs.coefficients);\n      this.order = outputs.order;\n      if (outputs.r) {\n        this.r = outputs.r;\n        this.r2 = outputs.r2;\n      }\n      if (outputs.chi2) {\n        this.chi2 = outputs.chi2;\n      }\n    } else {\n      options = Object.assign({}, defaultOptions, options);\n      this.order = options.order;\n      this.coefficients = [];\n      this.X = inputs;\n      this.y = outputs;\n\n      this.train(this.X, this.y, options);\n    }\n  }\n\n  /**\n   * Function that fits the model given the data(X) and predictions(y).\n   * The third argument is an object with the following options:\n   * * order: order of the polynomial to fit.\n   *\n   * @param {Matrix} X - A matrix with n rows and 2 columns.\n   * @param {Matrix} y - A vector of the prediction values.\n   */\n  train(X, y) {\n    if (!Matrix.isMatrix(X)) X = new Matrix(X);\n    if (!Matrix.isMatrix(y)) y = Matrix.columnVector(y);\n\n    if (y.rows !== X.rows) {\n      y = y.transpose();\n    }\n\n    if (X.columns !== 2) {\n      throw new RangeError(\n        `You give X with ${X.columns} columns and it must be 2`\n      );\n    }\n    if (X.rows !== y.rows) {\n      throw new RangeError('X and y must have the same rows');\n    }\n\n    var examples = X.rows;\n    var coefficients = ((this.order + 2) * (this.order + 1)) / 2;\n    this.coefficients = new Array(coefficients);\n\n    var x1 = X.getColumnVector(0);\n    var x2 = X.getColumnVector(1);\n\n    var scaleX1 =\n      1.0 /\n      x1\n        .clone()\n        .abs()\n        .max();\n    var scaleX2 =\n      1.0 /\n      x2\n        .clone()\n        .abs()\n        .max();\n    var scaleY =\n      1.0 /\n      y\n        .clone()\n        .abs()\n        .max();\n\n    x1.mulColumn(0, scaleX1);\n    x2.mulColumn(0, scaleX2);\n    y.mulColumn(0, scaleY);\n\n    var A = new Matrix(examples, coefficients);\n    var col = 0;\n\n    for (var i = 0; i <= this.order; ++i) {\n      var limit = this.order - i;\n      for (var j = 0; j <= limit; ++j) {\n        var result = powColVector(x1, i).mulColumnVector(powColVector(x2, j));\n        A.setColumn(col, result);\n        col++;\n      }\n    }\n\n    var svd = new SVD(A.transpose(), {\n      computeLeftSingularVectors: true,\n      computeRightSingularVectors: true,\n      autoTranspose: false\n    });\n\n    var qqs = Matrix.rowVector(svd.diagonal);\n    qqs = qqs.apply(function (i, j) {\n      if (this.get(i, j) >= 1e-15) this.set(i, j, 1 / this.get(i, j));\n      else this.set(i, j, 0);\n    });\n\n    var qqs1 = Matrix.zeros(examples, coefficients);\n    for (i = 0; i < coefficients; ++i) {\n      qqs1.set(i, i, qqs.get(0, i));\n    }\n\n    qqs = qqs1;\n\n    var U = svd.rightSingularVectors;\n    var V = svd.leftSingularVectors;\n\n    this.coefficients = V.mmul(qqs.transpose())\n      .mmul(U.transpose())\n      .mmul(y);\n\n    col = 0;\n\n    for (i = 0; i <= coefficients; ++i) {\n      limit = this.order - i;\n      for (j = 0; j <= limit; ++j) {\n        this.coefficients.set(\n          col,\n          0,\n          (this.coefficients.get(col, 0) *\n            Math.pow(scaleX1, i) *\n            Math.pow(scaleX2, j)) /\n            scaleY\n        );\n        col++;\n      }\n    }\n  }\n\n  _predict(newInputs) {\n    var x1 = newInputs[0];\n    var x2 = newInputs[1];\n\n    var y = 0;\n    var column = 0;\n\n    for (var i = 0; i <= this.order; i++) {\n      for (var j = 0; j <= this.order - i; j++) {\n        y +=\n          Math.pow(x1, i) * Math.pow(x2, j) * this.coefficients.get(column, 0);\n        column++;\n      }\n    }\n\n    return y;\n  }\n\n  toJSON() {\n    return {\n      name: 'polyfit2D',\n      order: this.order,\n      coefficients: this.coefficients\n    };\n  }\n\n  static load(json) {\n    if (json.name !== 'polyfit2D') {\n      throw new TypeError('not a polyfit2D model');\n    }\n    return new PolynomialFitRegression2D(true, json);\n  }\n}\n\n/**\n * Function that given a column vector return this: vector^power\n *\n * @param x - Column vector.\n * @param power - Pow number.\n * @return {Suite|Matrix}\n */\nfunction powColVector(x, power) {\n  var result = x.clone();\n  for (var i = 0; i < x.rows; ++i) {\n    result.set(i, 0, Math.pow(result.get(i, 0), power));\n  }\n  return result;\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport median from 'ml-array-median';\n\nexport default class TheilSenRegression extends BaseRegression {\n  /**\n   * Theil–Sen estimator\n   * https://en.wikipedia.org/wiki/Theil%E2%80%93Sen_estimator\n   * @param {Array<number>|boolean} x\n   * @param {Array<number>|object} y\n   * @constructor\n   */\n  constructor(x, y) {\n    super();\n    if (x === true) {\n      // loads the model\n      this.slope = y.slope;\n      this.intercept = y.intercept;\n      this.coefficients = y.coefficients;\n    } else {\n      // creates the model\n      checkArrayLength(x, y);\n      theilSen(this, x, y);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'TheilSenRegression',\n      slope: this.slope,\n      intercept: this.intercept\n    };\n  }\n\n  _predict(input) {\n    return this.slope * input + this.intercept;\n  }\n\n  computeX(input) {\n    return (input - this.intercept) / this.slope;\n  }\n\n  toString(precision) {\n    var result = 'f(x) = ';\n    if (this.slope) {\n      var xFactor = maybeToPrecision(this.slope, precision);\n      result += `${Math.abs(xFactor - 1) < 1e-5 ? '' : `${xFactor} * `}x`;\n      if (this.intercept) {\n        var absIntercept = Math.abs(this.intercept);\n        var operator = absIntercept === this.intercept ? '+' : '-';\n        result +=\n          ` ${operator} ${maybeToPrecision(absIntercept, precision)}`;\n      }\n    } else {\n      result += maybeToPrecision(this.intercept, precision);\n    }\n    return result;\n  }\n\n  toLaTeX(precision) {\n    return this.toString(precision);\n  }\n\n  static load(json) {\n    if (json.name !== 'TheilSenRegression') {\n      throw new TypeError('not a Theil-Sen model');\n    }\n    return new TheilSenRegression(true, json);\n  }\n}\n\nfunction theilSen(regression, x, y) {\n  let len = x.length;\n  let slopes = new Array(len * len);\n  let count = 0;\n  for (let i = 0; i < len; ++i) {\n    for (let j = i + 1; j < len; ++j) {\n      if (x[i] !== x[j]) {\n        slopes[count++] = (y[j] - y[i]) / (x[j] - x[i]);\n      }\n    }\n  }\n  slopes.length = count;\n  let medianSlope = median(slopes);\n\n  let cuts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    cuts[i] = y[i] - medianSlope * x[i];\n  }\n\n  regression.slope = medianSlope;\n  regression.intercept = median(cuts);\n  regression.coefficients = [regression.intercept, regression.slope];\n}\n","import BaseRegression, {\n  checkArrayLength,\n  maybeToPrecision\n} from 'ml-regression-base';\nimport { solve } from 'ml-matrix';\n\n/**\n * @class RobustPolynomialRegression\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree - polynomial degree\n */\nexport default class RobustPolynomialRegression extends BaseRegression {\n  constructor(x, y, degree) {\n    super();\n    if (x === true) {\n      this.degree = y.degree;\n      this.powers = y.powers;\n      this.coefficients = y.coefficients;\n    } else {\n      checkArrayLength(x, y);\n      robustPolynomial(this, x, y, degree);\n    }\n  }\n\n  toJSON() {\n    return {\n      name: 'robustPolynomialRegression',\n      degree: this.degree,\n      powers: this.powers,\n      coefficients: this.coefficients\n    };\n  }\n\n  _predict(x) {\n    return predict(x, this.powers, this.coefficients);\n  }\n\n  /**\n   * Display the formula\n   * @param {number} precision - precision for the numbers\n   * @return {string}\n   */\n  toString(precision) {\n    return this._toFormula(precision, false);\n  }\n\n  /**\n   * Display the formula in LaTeX format\n   * @param {number} precision - precision for the numbers\n   * @return {string}\n   */\n  toLaTeX(precision) {\n    return this._toFormula(precision, true);\n  }\n\n  _toFormula(precision, isLaTeX) {\n    let sup = '^';\n    let closeSup = '';\n    let times = ' * ';\n    if (isLaTeX) {\n      sup = '^{';\n      closeSup = '}';\n      times = '';\n    }\n\n    let fn = '';\n    let str = '';\n    for (let k = 0; k < this.coefficients.length; k++) {\n      str = '';\n      if (this.coefficients[k] !== 0) {\n        if (this.powers[k] === 0) {\n          str = maybeToPrecision(this.coefficients[k], precision);\n        } else {\n          if (this.powers[k] === 1) {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x`;\n          } else {\n            str = `${maybeToPrecision(this.coefficients[k], precision) +\n              times}x${sup}${this.powers[k]}${closeSup}`;\n          }\n        }\n\n        if (this.coefficients[k] > 0 && k !== this.coefficients.length - 1) {\n          str = ` + ${str}`;\n        } else if (k !== this.coefficients.length - 1) {\n          str = ` ${str}`;\n        }\n      }\n      fn = str + fn;\n    }\n    if (fn.charAt(0) === '+') {\n      fn = fn.slice(1);\n    }\n\n    return `f(x) = ${fn}`;\n  }\n\n  static load(json) {\n    if (json.name !== 'robustPolynomialRegression') {\n      throw new TypeError('not a RobustPolynomialRegression model');\n    }\n    return new RobustPolynomialRegression(true, json);\n  }\n}\n\nfunction robustPolynomial(regression, x, y, degree) {\n  let powers = Array(degree)\n    .fill(0)\n    .map((_, index) => index);\n\n  const tuples = getRandomTuples(x, y, degree);\n\n  var min;\n  for (var i = 0; i < tuples.length; i++) {\n    var tuple = tuples[i];\n    var coefficients = calcCoefficients(tuple, powers);\n\n    var residuals = x.slice();\n    for (var j = 0; j < x.length; j++) {\n      residuals[j] = y[j] - predict(x[j], powers, coefficients);\n      residuals[j] = {\n        residual: residuals[j] * residuals[j],\n        coefficients\n      };\n    }\n\n    var median = residualsMedian(residuals);\n    if (!min || median.residual < min.residual) {\n      min = median;\n    }\n  }\n\n  regression.degree = degree;\n  regression.powers = powers;\n  regression.coefficients = min.coefficients;\n}\n\n/**\n * @ignore\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} degree\n * @return {Array<{x:number,y:number}>}\n */\nfunction getRandomTuples(x, y, degree) {\n  var len = Math.floor(x.length / degree);\n  var tuples = new Array(len);\n\n  for (var i = 0; i < x.length; i++) {\n    var pos = Math.floor(Math.random() * len);\n\n    var counter = 0;\n    while (counter < x.length) {\n      if (!tuples[pos]) {\n        tuples[pos] = [\n          {\n            x: x[i],\n            y: y[i]\n          }\n        ];\n        break;\n      } else if (tuples[pos].length < degree) {\n        tuples[pos].push({\n          x: x[i],\n          y: y[i]\n        });\n        break;\n      } else {\n        counter++;\n        pos = (pos + 1) % len;\n      }\n    }\n\n    if (counter === x.length) {\n      return tuples;\n    }\n  }\n  return tuples;\n}\n\n/**\n * @ignore\n * @param {{x:number,y:number}} tuple\n * @param {Array<number>} powers\n * @return {Array<number>}\n */\nfunction calcCoefficients(tuple, powers) {\n  var X = tuple.slice();\n  var Y = tuple.slice();\n  for (var i = 0; i < X.length; i++) {\n    Y[i] = [tuple[i].y];\n    X[i] = new Array(powers.length);\n    for (var j = 0; j < powers.length; j++) {\n      X[i][j] = Math.pow(tuple[i].x, powers[j]);\n    }\n  }\n\n  return solve(X, Y).to1DArray();\n}\n\nfunction predict(x, powers, coefficients) {\n  let y = 0;\n  for (let k = 0; k < powers.length; k++) {\n    y += coefficients[k] * Math.pow(x, powers[k]);\n  }\n  return y;\n}\n\nfunction residualsMedian(residuals) {\n  residuals.sort((a, b) => a.residual - b.residual);\n\n  var l = residuals.length;\n  var half = Math.floor(l / 2);\n  return l % 2 === 0 ? residuals[half - 1] : residuals[half];\n}\n","import PotentialRegression from './regression/potential-regression';\n\nexport {\n  default as SimpleLinearRegression,\n  default as SLR\n} from 'ml-regression-simple-linear';\nexport { default as PolynomialRegression } from 'ml-regression-polynomial';\nexport { default as ExponentialRegression } from 'ml-regression-exponential';\nexport { default as PowerRegression } from 'ml-regression-power';\nexport {\n  default as MultivariateLinearRegression\n} from 'ml-regression-multivariate-linear';\nconst NLR = {\n  PotentialRegression\n};\nexport { NLR, NLR as NonLinearRegression };\n\nexport {\n  default as KernelRidgeRegression,\n  default as KRR\n} from './regression/kernel-ridge-regression';\nexport {\n  default as PolinomialFitting2D\n} from './regression/poly-fit-regression2d';\n\n// robust regressions\nexport { default as TheilSenRegression } from 'ml-regression-theil-sen';\nexport {\n  default as RobustPolynomialRegression\n} from 'ml-regression-robust-polynomial';\n","const SLR = require(\"ml-regression\").SLR;\nlet inputs = [80, 60, 10, 20, 30];\nlet outputs = [20, 40, 30, 50, 60];\n\nlet regression = new SLR(inputs, outputs);\n//regression.toString(3) === \"f(x) = - 0.265 * x + 50.6\";\n\nconsole.log(regression.predict(80));\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}